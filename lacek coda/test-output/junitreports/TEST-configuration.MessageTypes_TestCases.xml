<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite name="configuration.MessageTypes_TestCases" tests="1" time="22.651" ignored="63" failures="1" timestamp="04 Nov 2017 02:50:17 GMT" skipped="0" hostname="remote-wkstn3" errors="0">
  <testcase name="message_type_test_scripts_will_be_added_in_maintenace" time="22.651" classname="configuration.MessageTypes_TestCases">
    <failure type="java.lang.AssertionError" message="expected [(sta)CODA - Message Types] but found [CODA - Message Types]">
      <![CDATA[java.lang.AssertionError: expected [(sta)CODA - Message Types] but found [CODA - Message Types]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at login.DashboardPage.clickMessagesType(DashboardPage.java:312)
	at configuration.MessageTypes_TestCases.message_type_test_scripts_will_be_added_in_maintenace(MessageTypes_TestCases.java:15)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
    </failure>
  </testcase> <!-- message_type_test_scripts_will_be_added_in_maintenace -->
  <testcase name="empty_name_field_in_permission_categories_edit_page" classname="access.PermissionCategoriesEdit_TestCases">
    <skipped/>
  </testcase> <!-- empty_name_field_in_permission_categories_edit_page -->
  <testcase name="empty_controller_name_field_in_permission_categories_edit_page" classname="access.PermissionCategoriesEdit_TestCases">
    <skipped/>
  </testcase> <!-- empty_controller_name_field_in_permission_categories_edit_page -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="tearDown" classname="Utility.TestBase">
    <skipped/>
  </testcase> <!-- tearDown -->
  <testcase name="update_template_type_to_previous" classname="layout.TemplatesEdit_testcases">
    <skipped/>
  </testcase> <!-- update_template_type_to_previous -->
  <testcase name="update_template_type" classname="layout.TemplatesEdit_testcases">
    <skipped/>
  </testcase> <!-- update_template_type -->
  <testcase name="open_workflow_page" classname="login.Dashboard_TestCases">
    <skipped/>
  </testcase> <!-- open_workflow_page -->
  <testcase name="update_message_client_field" classname="library.MessagesEdit_Testcases">
    <skipped/>
  </testcase> <!-- update_message_client_field -->
  <testcase name="update_message_clientname_to_previous_client" classname="library.MessagesEdit_Testcases">
    <skipped/>
  </testcase> <!-- update_message_clientname_to_previous_client -->
  <testcase name="empty_permission_category_field_in_permissions_edit_page" classname="access.PemissionsEdit_TestCases">
    <skipped/>
  </testcase> <!-- empty_permission_category_field_in_permissions_edit_page -->
  <testcase name="empty_name_field_in_permissions_edit_page" classname="access.PemissionsEdit_TestCases">
    <skipped/>
  </testcase> <!-- empty_name_field_in_permissions_edit_page -->
</testsuite> <!-- configuration.MessageTypes_TestCases -->
